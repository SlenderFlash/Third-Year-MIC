# Estimation de la puissance en les alternatives (5.05,5.1,5.2,5.3):
# A COMPLETER en utilisant la fonction points()
n=1000
sigma2=2
m0=5
alpha=0.05
# Graphe de la puissance théorique sur ]5,5.3]:
t=seq(5,5.3,length.out=100)
puissance.c1 <- function(t, alternative = "greater")
{
if(alternative=="two.sided"){      # test bilatéral
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha/2), mean = t, sd = sqrt(sigma2/n)) + pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha/2), mean = t, sd = sqrt(sigma2/n))
}
else{
if(alternative=="greater"){      # test unilatéral avec l'alternative H_1
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha), mean = t, sd = sqrt(sigma2/n))
}
else{
if(alternative=="less"){       # test unilatéral avec l'alternative H'_1
p = pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha), mean = t, sd = sqrt(sigma2/n))}
}
}
return(p)
}
# A COMPLETER en utilisant la fonction plot(...,type="l")
s <- puissance.c1(t)
plot(t,s,type = 'l')
# Estimation de la puissance en les alternatives (5.05,5.1,5.2,5.3):
# A COMPLETER en utilisant la fonction points()
n=1000
sigma2=2
m0=5
alpha=0.05
# Graphe de la puissance théorique sur ]5,5.3]:
t=seq(5,5.3,length.out=100)
puissance.c1 <- function(t, alternative = "greater")
{
if(alternative=="two.sided"){      # test bilatéral
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha/2), mean = t, sd = sqrt(sigma2/n)) + pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha/2), mean = t, sd = sqrt(sigma2/n))
}
else{
if(alternative=="greater"){      # test unilatéral avec l'alternative H_1
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha), mean = t, sd = sqrt(sigma2/n))
}
else{
if(alternative=="less"){       # test unilatéral avec l'alternative H'_1
p = pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha), mean = t, sd = sqrt(sigma2/n))}
}
}
return(p)
}
# A COMPLETER en utilisant la fonction plot(...,type="l")
t
s <- puissance.c1(t)
plot(t,s,type = 'l')
# Estimation de la puissance en les alternatives (5.05,5.1,5.2,5.3):
# A COMPLETER en utilisant la fonction points()
n=1000
sigma2=2
m0=5
alpha=0.05
# Graphe de la puissance théorique sur ]5,5.3]:
t=seq(5,5.3,length.out=100)
puissance.c1 <- function(t, alternative = "greater")
{
if(alternative=="two.sided"){      # test bilatéral
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha/2), mean = t, sd = sqrt(sigma2/n)) + pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha/2), mean = t, sd = sqrt(sigma2/n))
}
else{
if(alternative=="greater"){      # test unilatéral avec l'alternative H_1
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha), mean = t, sd = sqrt(sigma2/n))
}
else{
if(alternative=="less"){       # test unilatéral avec l'alternative H'_1
p = pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha), mean = t, sd = sqrt(sigma2/n))}
}
}
return(p)
}
# A COMPLETER en utilisant la fonction plot(...,type="l")
t
s
s <- puissance.c1(t)
plot(t,s,type = 'l')
# Estimation de la puissance en les alternatives (5.05,5.1,5.2,5.3):
# A COMPLETER en utilisant la fonction points()
n=1000
sigma2=2
m0=5
alpha=0.05
# Graphe de la puissance théorique sur ]5,5.3]:
t=seq(5,5.3,length.out=100)
puissance.c1 <- function(t, alternative = "greater")
{
if(alternative=="two.sided"){      # test bilatéral
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha/2), mean = t, sd = sqrt(sigma2/n)) + pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha/2), mean = t, sd = sqrt(sigma2/n))
}
else{
if(alternative=="greater"){      # test unilatéral avec l'alternative H_1
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha), mean = t, sd = sqrt(sigma2/n))
}
else{
if(alternative=="less"){       # test unilatéral avec l'alternative H'_1
p = pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha), mean = t, sd = sqrt(sigma2/n))}
}
}
return(p)
}
# A COMPLETER en utilisant la fonction plot(...,type="l")
s <- 1:100
for (i in 1:100)
{
s[i] < - puissance.c1(t[i])
}
plot(t,s,type = 'l')
# Estimation de la puissance en les alternatives (5.05,5.1,5.2,5.3):
# A COMPLETER en utilisant la fonction points()
n=1000
sigma2=2
m0=5
alpha=0.05
# Graphe de la puissance théorique sur ]5,5.3]:
t=seq(5,5.3,length.out=100)
puissance.c1 <- function(t, alternative = "greater")
{
if(alternative=="two.sided"){      # test bilatéral
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha/2), mean = t, sd = sqrt(sigma2/n)) + pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha/2), mean = t, sd = sqrt(sigma2/n))
}
else{
if(alternative=="greater"){      # test unilatéral avec l'alternative H_1
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha), mean = t, sd = sqrt(sigma2/n))
}
else{
if(alternative=="less"){       # test unilatéral avec l'alternative H'_1
p = pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha), mean = t, sd = sqrt(sigma2/n))}
}
}
return(p)
}
# A COMPLETER en utilisant la fonction plot(...,type="l")
s <- 1:100
for (i in 1:100)
{
s[i] < - puissance.c1(t[i])
}
s
plot(t,s,type = 'l')
# Estimation de la puissance en les alternatives (5.05,5.1,5.2,5.3):
# A COMPLETER en utilisant la fonction points()
n=1000
sigma2=2
m0=5
alpha=0.05
# Graphe de la puissance théorique sur ]5,5.3]:
t=seq(5,5.3,length.out=100)
puissance.c1 <- function(t, alternative = "greater")
{
if(alternative=="two.sided"){      # test bilatéral
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha/2), mean = t, sd = sqrt(sigma2/n)) + pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha/2), mean = t, sd = sqrt(sigma2/n))
}
else{
if(alternative=="greater"){      # test unilatéral avec l'alternative H_1
p = 1 - pnorm(qnorm(1-alpha) - sqrt(n/sigma2)*(t-m0))
}
else{
if(alternative=="less"){       # test unilatéral avec l'alternative H'_1
p = pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha), mean = t, sd = sqrt(sigma2/n))}
}
}
return(p)
}
# A COMPLETER en utilisant la fonction plot(...,type="l")
s <- 1:100
for (i in 1:100)
{
s[i] < - puissance.c1(t[i])
}
s
plot(t,s,type = 'l')
# Estimation de la puissance en les alternatives (5.05,5.1,5.2,5.3):
# A COMPLETER en utilisant la fonction points()
n=1000
sigma2=2
m0=5
alpha=0.05
# Graphe de la puissance théorique sur ]5,5.3]:
t=seq(5,5.3,length.out=100)
puissance.c1 <- function(x, alternative = "greater")
{
if(alternative=="two.sided"){      # test bilatéral
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha/2), mean = x, sd = sqrt(sigma2/n)) + pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha/2), mean = x, sd = sqrt(sigma2/n))
}
else{
if(alternative=="greater"){      # test unilatéral avec l'alternative H_1
p = 1 - pnorm(qnorm(1-alpha) - sqrt(n/sigma2)*(x-m0))
}
else{
if(alternative=="less"){       # test unilatéral avec l'alternative H'_1
p = pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha), mean = x, sd = sqrt(sigma2/n))}
}
}
return(p)
}
# A COMPLETER en utilisant la fonction plot(...,type="l")
s <- 1:100
for (i in 1:100)
{
s[i] < - puissance.c1(t[i])
}
s
plot(t,s,type = 'l')
# Estimation de la puissance en les alternatives (5.05,5.1,5.2,5.3):
# A COMPLETER en utilisant la fonction points()
n=1000
sigma2=2
m0=5
alpha=0.05
# Graphe de la puissance théorique sur ]5,5.3]:
t=seq(5,5.3,length.out=100)
puissance.c1 <- function(x, alternative = "greater")
{
if(alternative=="two.sided"){      # test bilatéral
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha/2), mean = x, sd = sqrt(sigma2/n)) + pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha/2), mean = x, sd = sqrt(sigma2/n))
}
else{
if(alternative=="greater"){      # test unilatéral avec l'alternative H_1
p = 1 - pnorm(qnorm(1-alpha) - sqrt(n/sigma2)*(x-m0))
}
else{
if(alternative=="less"){       # test unilatéral avec l'alternative H'_1
p = pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha), mean = x, sd = sqrt(sigma2/n))}
}
}
return(p)
}
# A COMPLETER en utilisant la fonction plot(...,type="l")
s <- sapply(t, puissance.c1)
s
plot(t,s,type = 'l')
# Estimation de la puissance en les alternatives (5.05,5.1,5.2,5.3):
# A COMPLETER en utilisant la fonction points()
n=1000
sigma2=2
m0=5
alpha=0.05
# Graphe de la puissance théorique sur ]5,5.3]:
t=seq(5,5.3,length.out=100)
puissance.c1 <- function(t, alternative = "greater")
{
if(alternative=="two.sided"){      # test bilatéral
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha/2), mean = t, sd = sqrt(sigma2/n)) + pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha/2), mean = t, sd = sqrt(sigma2/n))
}
else{
if(alternative=="greater"){      # test unilatéral avec l'alternative H_1
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha), mean = t, sd = sqrt(sigma2/n))
}
else{
if(alternative=="less"){       # test unilatéral avec l'alternative H'_1
p = pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha), mean = t, sd = sqrt(sigma2/n))}
}
}
return(p)
}
# A COMPLETER en utilisant la fonction plot(...,type="l")
s <- sapply(t, puissance.c1)
plot(t,s,type = 'l')
# Estimation de la puissance en les alternatives (5.05,5.1,5.2,5.3):
# A COMPLETER en utilisant la fonction points()
n=1000
sigma2=2
m0=5
alpha=0.05
# Graphe de la puissance théorique sur ]5,5.3]:
t=seq(5,5.3,length.out=100)
puissance.c1 <- function(x, alternative = "greater")
{
if(alternative=="two.sided"){      # test bilatéral
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha/2), mean = x, sd = sqrt(sigma2/n)) + pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha/2), mean = x, sd = sqrt(sigma2/n))
}
else{
if(alternative=="greater"){      # test unilatéral avec l'alternative H_1
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha), mean = x, sd = sqrt(sigma2/n))
}
else{
if(alternative=="less"){       # test unilatéral avec l'alternative H'_1
p = pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha), mean = x, sd = sqrt(sigma2/n))}
}
}
return(p)
}
# A COMPLETER en utilisant la fonction plot(...,type="l")
s <- sapply(t, puissance.c1)
plot(t,s,type = 'l')
# Estimation de la puissance en les alternatives (5.05,5.1,5.2,5.3):
# A COMPLETER en utilisant la fonction points()
n=1000
sigma2=2
m0=5
alpha=0.05
# Graphe de la puissance théorique sur ]5,5.3]:
t=seq(5,5.3,length.out=100)
puissance.c1 <- function(x, alternative = "greater")
{
if(alternative=="two.sided"){      # test bilatéral
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha/2), mean = x, sd = sqrt(sigma2/n)) + pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha/2), mean = x, sd = sqrt(sigma2/n))
}
else{
if(alternative=="greater"){      # test unilatéral avec l'alternative H_1
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha), mean = x, sd = sqrt(sigma2/n))
}
else{
if(alternative=="less"){       # test unilatéral avec l'alternative H'_1
p = pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha), mean = x, sd = sqrt(sigma2/n))}
}
}
return(p)
}
# A COMPLETER en utilisant la fonction plot(...,type="l")
s <- sapply(t, puissance.c1)
s
plot(t,s,type = 'l')
# Estimation de la puissance en les alternatives (5.05,5.1,5.2,5.3):
# A COMPLETER en utilisant la fonction points()
n=1000
sigma2=2
m0=5
alpha=0.05
# Graphe de la puissance théorique sur ]5,5.3]:
t=seq(5,5.3,length.out=100)
puissance.c1 <- function(x, alternative = "greater")
{
if(alternative=="two.sided"){      # test bilatéral
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha/2), mean = x, sd = sqrt(sigma2/n)) + pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha/2), mean = x, sd = sqrt(sigma2/n))
}
else{
if(alternative=="greater"){      # test unilatéral avec l'alternative H_1
print(p)
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha), mean = x, sd = sqrt(sigma2/n))
}
else{
if(alternative=="less"){       # test unilatéral avec l'alternative H'_1
p = pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha), mean = x, sd = sqrt(sigma2/n))}
}
}
return(p)
}
# A COMPLETER en utilisant la fonction plot(...,type="l")
s <- sapply(t, puissance.c1)
n=1000
sigma2=2
m0=5
alpha=0.05
# Graphe de la puissance théorique sur ]5,5.3]:
t=seq(5,5.3,length.out=100)
puissance.c1 <- function(x, alternative = "greater")
{
if(alternative=="two.sided"){      # test bilatéral
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha/2), mean = x, sd = sqrt(sigma2/n)) + pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha/2), mean = x, sd = sqrt(sigma2/n))
}
else{
if(alternative=="greater"){      # test unilatéral avec l'alternative H_1
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha), mean = x, sd = sqrt(sigma2/n))
print(p)
}
else{
if(alternative=="less"){       # test unilatéral avec l'alternative H'_1
p = pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha), mean = x, sd = sqrt(sigma2/n))}
}
}
return(p)
}
# A COMPLETER en utilisant la fonction plot(...,type="l")
s <- sapply(t, puissance.c1)
plot(t,s,type = 'l')
# Estimation de la puissance en les alternatives (5.05,5.1,5.2,5.3):
# A COMPLETER en utilisant la fonction points()
n=1000
sigma2=2
m0=5
alpha=0.05
# Graphe de la puissance théorique sur ]5,5.3]:
t=seq(5,5.3,length.out=100)
puissance.c1 <- function(x, alternative = "greater")
{
if(alternative=="two.sided"){      # test bilatéral
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha/2), mean = x, sd = sqrt(sigma2/n)) + pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha/2), mean = x, sd = sqrt(sigma2/n))
}
else{
if(alternative=="greater"){      # test unilatéral avec l'alternative H_1
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha), mean = x, sd = sqrt(sigma2/n))
print(m0 + sqrt(n/sigma2)*qnorm(1-alpha))
}
else{
if(alternative=="less"){       # test unilatéral avec l'alternative H'_1
p = pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha), mean = x, sd = sqrt(sigma2/n))}
}
}
return(p)
}
# A COMPLETER en utilisant la fonction plot(...,type="l")
s <- sapply(t, puissance.c1)
plot(t,s,type = 'l')
# Estimation de la puissance en les alternatives (5.05,5.1,5.2,5.3):
# A COMPLETER en utilisant la fonction points()
n=1000
sigma2=2
m0=5
alpha=0.05
# Graphe de la puissance théorique sur ]5,5.3]:
t=seq(5,5.3,length.out=100)
puissance.c1 <- function(x, alternative = "greater")
{
if(alternative=="two.sided"){      # test bilatéral
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha/2), mean = x, sd = sqrt(sigma2/n)) + pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha/2), mean = x, sd = sqrt(sigma2/n))
}
else{
if(alternative=="greater"){      # test unilatéral avec l'alternative H_1
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha), mean = x, sd = sqrt(sigma2/n))
print(pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha), mean = x, sd = sqrt(sigma2/n))
}
n=1000
sigma2=2
m0=5
alpha=0.05
# Graphe de la puissance théorique sur ]5,5.3]:
t=seq(5,5.3,length.out=100)
puissance.c1 <- function(x, alternative = "greater")
{
if(alternative=="two.sided"){      # test bilatéral
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha/2), mean = x, sd = sqrt(sigma2/n)) + pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha/2), mean = x, sd = sqrt(sigma2/n))
}
else{
if(alternative=="greater"){      # test unilatéral avec l'alternative H_1
p = 1 - pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha), mean = x, sd = sqrt(sigma2/n))
print(pnorm(m0 + sqrt(n/sigma2)*qnorm(1-alpha), mean = x, sd = sqrt(sigma2/n)))
}
else{
if(alternative=="less"){       # test unilatéral avec l'alternative H'_1
p = pnorm(m0 + sqrt(n/sigma2)*qnorm(alpha), mean = x, sd = sqrt(sigma2/n))}
}
}
return(p)
}
# A COMPLETER en utilisant la fonction plot(...,type="l")
s <- sapply(t, puissance.c1)
plot(t,s,type = 'l')
# Estimation de la puissance en les alternatives (5.05,5.1,5.2,5.3):
# A COMPLETER en utilisant la fonction points()
n=1000
sigma2=2
m0=5
alpha=0.05
# Graphe de la puissance théorique sur ]5,5.3]:
t=seq(5,5.3,length.out=100)
puissance.c1 <- function(x, alternative = "greater")
{
if(alternative=="two.sided"){      # test bilatéral
p = 1 - pnorm(m0 + sqrt(sigma2/n)*qnorm(1-alpha/2), mean = x, sd = sqrt(sigma2/n)) + pnorm(m0 + sqrt(sigma2/n)*qnorm(alpha/2), mean = x, sd = sqrt(sigma2/n))
}
else{
if(alternative=="greater"){      # test unilatéral avec l'alternative H_1
p = 1 - pnorm(m0 + sqrt(sigma2/n)*qnorm(1-alpha), mean = x, sd = sqrt(sigma2/n))
}
else{
if(alternative=="less"){       # test unilatéral avec l'alternative H'_1
p = pnorm(m0 + sqrt(sigma2/n)*qnorm(alpha), mean = x, sd = sqrt(sigma2/n))}
}
}
return(p)
}
# A COMPLETER en utilisant la fonction plot(...,type="l")
s <- sapply(t, puissance.c1)
plot(t,s,type = 'l')
# Estimation de la puissance en les alternatives (5.05,5.1,5.2,5.3):
# A COMPLETER en utilisant la fonction points()
test.moy2 <- function(x,m0)
{
Tn_obs = sqrt(length(x))*(mean(x)-m0)/sqrt(sum((x-mean(x))**2)) # A COMPLETER (remplacer les "...")
pval = 1 - pt(Zn_obs,length(x) - 1) # A COMPLETER (remplacer les "...")
attributes(pval)$stat.obs=Tn_obs   # pour renvoyer également la statistique de test observée
return(pval)
}
help(t.test)
m=5 ; sigma2=2 ; n=100 ; m0=5
x=rnorm(n,m,sqrt(sigma2))
# A COMPLETER
help(t.test)
m=5 ; sigma2=2 ; n=100 ; m0=5
x=rnorm(n,m,sqrt(sigma2))
t.test(x)
help(t.test)
m=5 ; sigma2=2 ; n=100 ; m0=5
x=rnorm(n,m,sqrt(sigma2))
t.test(x, alternative = "g", mu = 5)
fructose=c(65.03,56.40,50.93,58.13,56.63,55.50,56.05,58.58,62.46,50.39)
mean(fructose)
var(fructose)
sd(fructose)
t.test(fructose, alternative = "l", mu = 60)
test.moy1(fructose, alternative = "l", m0 = 60, sigma2 = 25)
test.moy1(x = fructose, alternative = "l", m0 = 60, sigma2 = 25)
test.moy1(x = fructose, alternative = "less", m0 = 60, sigma2 = 25)
test.moy1(x = fructose, alternative = "less", m0 = 60, sigma2 = 25)
test.moy2(x = fructose, m0 = 55)
test.moy2 <- function(x,m0)
{
Zn_obs = sqrt(length(x))*(mean(x)-m0)/sqrt(sum((x-mean(x))**2)) # A COMPLETER (remplacer les "...")
pval = 1 - pt(Zn_obs,length(x) - 1) # A COMPLETER (remplacer les "...")
attributes(pval)$stat.obs=Zn_obs   # pour renvoyer également la statistique de test observée
return(pval)
}
test.moy2(x = fructose, m0 = 55)
